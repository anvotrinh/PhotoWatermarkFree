fastlane_require 'dotenv'

before_all do
  Dotenv.overload '.env.secret'
end

lane :internal do
  changeEnv('staging')
  buildNumber = increaseBuildNumber
  build_app(
    workspace: "PhotoWatermarkFree.xcworkspace",
    scheme: "PhotoWatermarkFree"
  )
  upload_to_testflight
  notifySlack(buildNumber)
end

lane :release do
  changeEnv('production')
  buildNumber = increaseBuildNumber
  build_app(
    workspace: "PhotoWatermarkFree.xcworkspace",
    scheme: "PhotoWatermarkFree"
  )
  upload_to_app_store(
    force: true,
    release_notes: {
      "en-US": 'Bug fixes and performance improvements'
    },
    submit_for_review: true
  )
  changeEnv('staging')
end

def increaseBuildNumber()
  ensure_git_status_clean

  # read file
  path = '../PhotoWatermarkFree.xcodeproj/project.pbxproj'
  s = File.read(path)
  # update build number
  buildNumber = latest_testflight_build_number + 1

  re = /CURRENT_PROJECT_VERSION\s+=\s+([\d.]+);/ 
  s = s.gsub(re, "CURRENT_PROJECT_VERSION = #{buildNumber};")
  # save to file
  f = File.new(path, 'w')
  f.write(s)
  f.close
  # commit
  git_commit(
    path: 'PhotoWatermarkFree.xcodeproj/project.pbxproj',
    message: "increase IOS build number #{buildNumber}")
  push_to_git_remote(remote_branch: 'master')
  return buildNumber
end

def notifySlack(buildNumber)
  versionNumber = get_version_number(
    xcodeproj: "PhotoWatermarkFree.xcodeproj",
    target: "PhotoWatermarkFree"
  )
  message = "New internal version #{versionNumber} (#{buildNumber}) of Park Smart IOS has been deployed successfully. Please update in Testflight"
  slack(
    message: message,
    slack_url: ENV['DEV_CHANNEL_SLACK_URL'],
    success: true,
    default_payloads: []
  )
end

def changeEnv(env)
  f = File.new('../../.env', 'w')
  apiUrl = "#{env.upcase}_API_URL"
  content = "API_URL=#{ENV[apiUrl]}
ENVIRONMENT=#{env}
ENABLE_REDUX_LOGGER=#{env == 'production' ? 'false' : 'true'}"
  f.write(content)
  f.close
end